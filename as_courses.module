<?php

/**
 * @file
 * Contains as_courses.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;

function as_courses_nameize($str,$a_char = array("'","-"," ")){
// adapted from http://php.net/manual/en/function.ucfirst.php
//$str contains the complete raw name string
//$a_char is an array containing the characters we use as separators for capitalization. If you don't pass anything, there are three in there as default.
$string = strtolower($str);
foreach ($a_char as $temp){
    $pos = strpos($string,$temp);
    if ($pos){
        //we are in the loop because we found one of the special characters in the array, so lets split it up into chunks and capitalize each one.
        $mend = '';
        $a_split = explode($temp,$string);
        foreach ($a_split as $temp2){
            //capitalize each portion of the string which was separated at a special character
            $mend .= ucfirst($temp2).$temp;
            }
        $string = substr($mend,0,-1);
        }
    }
return ucfirst($string);
}

function as_courses_get_courses_json($semester,$keyword_params) {
//set cache id (verify parameters are safe values to use as cache id)
$cid = "as_courses:" . $semester . ":" . $keyword_params;
$courses_json = NULL;
//check cache
if ($cache = \Drupal::cache('data')->get($cid)) {
    //fetch cache data
    $courses_json = $cache->data;
} else {
    // if no cache data check url
    $url = "https://classes.cornell.edu/api/2.0/search/classes.json?roster={$semester}&subject={$keyword_params}";
    // Create the stream context
    $context = stream_context_create(array(
    'http' => array(
        'timeout' => 2   // Timeout in seconds
        )
    ));
    // get file contents
    //if (($data = @file_get_contents($url, 0, $context)) === false) {
        //printf("<h3>No courses found on https://classes.cornell.edu for semester:{$semester} and keyword:{$keyword_params}</h3>\n");
        //return;
   // } else {
        //$data = @file_get_contents($url, 0, $context);
    //}
    // curl
    //curl request
    $ch = curl_init();
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
    curl_setopt($ch, CURLOPT_HEADER, 0);
    curl_setopt($ch, CURLOPT_URL,$url);
    curl_setopt($ch, CURLOPT_CONNECTTIMEOUT, 10); 
    curl_setopt($ch, CURLOPT_TIMEOUT, 10); //timeout in seconds

    $data = curl_exec($ch);
    //$httpcode = curl_getinfo($ch, CURLINFO_HTTP_CODE);
    curl_close($ch);

    if (!empty($data)) {
        //dump($data);
        $json = json_decode($data, true);
        //dump($json);
    }

    if (!empty($json['data']['classes'])) {
        $courses_json = $json['data']['classes'];
        // set cache
        \Drupal::cache('data')
            ->set($cid, $courses_json, time()+86400);
        }
    }
//return courses data
return $courses_json;
}


/**
 * Implements hook_help().
 */
function as_courses_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the as_courses module.
    case 'help.page.as_courses':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Turns json from classes.cornell.edu into twiggable data.') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function as_courses_theme($existing, $type, $theme, $path) {
  return [
    'courses' => [
      'variables' => ['semester' => NULL, 'semestername' => NULL, 'course_prefixes' => NULL],
    ],
  ];
}
